Перем xB, НачДата, КонДата, НЗ;

//***
Перем Эксель; //переменная класса
Перем Лист; //текущий лист книги
Перем ПоследняяОшибка; //текстовое описание последней ошибки. Если операция прошла успешно, переменная не очищается
Перем Загружена; //1 - признак того, что экселевская таблица загружена

//***
Процедура Конструктор()
        ПоследняяОшибка = "";
        Загружена = 0;
        Лист = "";
        
        Попытка
                Эксель = Новый COMОбъект("Excel.Application");
        Исключение
                Сообщить("Ошибка инициализации класса ""Эксель""");
                ПоследняяОшибка = ОписаниеОшибки();
        КонецПопытки;
КонецПроцедуры

//***
Процедура Деструктор()
        Если Строка(ТипЗнч(Эксель)) = "COM Объект" Тогда
                Эксель.Workbooks.close();
                Эксель.Quit();
                Эксель = "";
        КонецЕсли;
КонецПроцедуры

//закрыть открытую книгу
Функция ЗакрытьКнигу() Экспорт
        Если Загружена = 0 Тогда
                ПоследняяОшибка = "Таблица не загружена";
                Возврат 0;
        КонецЕсли;
        Эксель.Workbooks.close();
        Загружена = 0;
        Возврат 1;
КонецФункции
//1 - показывать предупреждения, 0 - не показывать.
Функция ПоказыватьПредупреждения(Режим) Экспорт
        Если Строка(ТипЗнч(Эксель)) <> "COM Объект" Тогда
                ПоследняяОшибка = "Не инициализирован OLE-объект";
                Возврат 0;
        КонецЕсли;
        Попытка
                Эксель.DisplayAlerts = Режим;
        Исключение
                ПоследняяОшибка = ОписаниеОшибки();
                Возврат 0;
        КонецПопытки;
        Возврат 1;
КонецФункции

//получить текстовое описание последней ошибки
Функция ПоследняяОшибка() Экспорт
        Возврат ПоследняяОшибка;
КонецФункции

//просто очищает значение переменной
Процедура ОчиститьОшибку() Экспорт
        ПоследняяОшибка = "";
КонецПроцедуры

//фозвращает количество листов в книге
Функция КоличествоЛистов() Экспорт
        Если Загружена = 0 Тогда
                ПоследняяОшибка = "Таблица не загружена";
                Возврат 0;
        КонецЕсли;
        Попытка
                КолЛист =  Эксель.Worksheets.Count;
        Исключение
                ПоследняяОшибка = ОписаниеОшибки();
                Возврат 0;
        КонецПопытки;
        Возврат КолЛист;
КонецФункции

//устанавливает активный лист
Функция УстановитьЛист(Номер) Экспорт
        Если Загружена = 0 Тогда
                ПоследняяОшибка = "Таблица не загружена";
                Возврат 0;
        КонецЕсли;
        Попытка
                Лист = Эксель.Sheets(Номер);
        Исключение
                ПоследняяОшибка = ОписаниеОшибки();
                Возврат 0;
        КонецПопытки;
        Возврат 1;
КонецФункции
//возвращает номер текущего листа книги
Функция ТекущийЛист() Экспорт
        Если Загружена = 0 Тогда
                ПоследняяОшибка = "Таблица не загружена";
                Возврат 0;
        КонецЕсли;
        Попытка
                НомЛист = Лист.Index;
        Исключение
                ПоследняяОшибка = ОписаниеОшибки();
                Возврат 0;
        КонецПопытки;
        Возврат НомЛист;
КонецФункции
//возвращает название текущего листа
Функция ИмяЛиста() Экспорт
        Если Загружена = 0 Тогда
                ПоследняяОшибка = "Таблица не загружена";
                Возврат 0;
        КонецЕсли;
        Попытка
                ИмяЛиста = Лист.Name;
        Исключение
                ПоследняяОшибка = ОписаниеОшибки();
                Возврат 0;
        КонецПопытки;
        Возврат ИмяЛиста;
КонецФункции

//загрузка экселевского файла
Функция Загрузить(ИмяФайла,ОбновлятьСсылки=0,ТолькоЧтение=0) Экспорт
        Если Строка(ТипЗнч(Эксель)) <> "COM Объект" Тогда
                ПоследняяОшибка = "Не инициализирован OLE-объект";
                Возврат 0;
        КонецЕсли;
        Файл = Новый Файл(СокрЛП(ИмяФайла));
        Если НЕ Файл.Существует() Тогда 
                ПоследняяОшибка = "Указанный файл не существует";
                Возврат 0;
		КонецЕсли;
        Если Загружена = 1 Тогда
                ПоследняяОшибка = "Таблица уже загружена";
                Возврат 0;
        КонецЕсли;
		Попытка
                Эксель.Workbooks.Open(ИмяФайла,ОбновлятьСсылки,ТолькоЧтение);
        Исключение
                ПоследняяОшибка = ОписаниеОшибки();
				Сообщить(ПоследняяОшибка);
                Возврат 0;
        КонецПопытки;
        Если КоличествоЛистов() > 0 Тогда
                УстановитьЛист(1);
        КонецЕсли;
        Загружена = 1;
        Возврат 1;
КонецФункции

//возвращает колонку - границу диапазона данных таблицы
Функция ПоследняяКолонка() Экспорт
        Если Загружена = 0 Тогда
                ПоследняяОшибка = "Таблица не загружена";
                Возврат 0;
        КонецЕсли;
        Если ТекущийЛист() = 0 Тогда
                ПоследняяОшибка = "Не выбран активный лист";
                Возврат 0;
        КонецЕсли;
        Попытка
                МаксКол = Лист.Cells(1,1).SpecialCells(11).Column;
        Исключение
                ПоследняяОшибка = ОписаниеОшибки();
                Возврат 0;
        КонецПопытки;
        Возврат МаксКол;
КонецФункции

//возвращает строку - границу диапазона данных таблицы
Функция ПоследняяСтрока() Экспорт
        Если Загружена = 0 Тогда
                ПоследняяОшибка = "Таблица не загружена";
                Возврат 0;
        КонецЕсли;
        Если ТекущийЛист() = 0 Тогда
                ПоследняяОшибка = "Не выбран активный лист";
                Возврат 0;
        КонецЕсли;
        Попытка
                МаксСтр = Лист.Cells(1,1).SpecialCells(11).Row;
        Исключение
                ПоследняяОшибка = ОписаниеОшибки();
                Возврат 0;
        КонецПопытки;
        Возврат МаксСтр;
КонецФункции

//возвращает значение указанной ячейки
Функция ПолучитьЗначениеЯчейки(Стр, Кол) Экспорт
        Если Загружена = 0 Тогда
                ПоследняяОшибка = "Таблица не загружена";
                Возврат 0;
        КонецЕсли;
        Если ТекущийЛист() = 0 Тогда
                ПоследняяОшибка = "Не выбран активный лист";
                Возврат 0;
        КонецЕсли;
        Попытка
                Значение = Лист.Cells(Стр,Кол).Value;
        Исключение
                ПоследняяОшибка = ОписаниеОшибки();
                Возврат 0;
        КонецПопытки;
        Возврат Значение;
КонецФункции


//возвращает значение указанной ячейки
Функция ПолучитьТекстЯчейки(Стр, Кол) Экспорт
        Если Загружена = 0 Тогда
                ПоследняяОшибка = "Таблица не загружена";
              
				Возврат 0;
        КонецЕсли;
        Если ТекущийЛист() = 0 Тогда
                ПоследняяОшибка = "Не выбран активный лист";
			
                Возврат 0;
        КонецЕсли;
        Попытка
                Значение = Лист.Cells(Стр,Кол).Text;
        Исключение
                ПоследняяОшибка = ОписаниеОшибки();
			
                Возврат 0;
        КонецПопытки;
        Возврат Значение;
КонецФункции

//загружает данные из листа в таблицу значений
Функция ЗагрузитьЛист(Заголовок=0) Экспорт
        Если Загружена = 0 Тогда
                ПоследняяОшибка = "Таблица не загружена";
                Возврат 0;
        КонецЕсли;
        Если ТекущийЛист() = 0 Тогда
                ПоследняяОшибка = "Не выбран активный лист";
                Возврат 0;
        КонецЕсли;
        Попытка
                МаксСтр = Лист.Cells(1,1).SpecialCells(11).Row;
        Исключение
                ПоследняяОшибка = ОписаниеОшибки();
                Возврат 0;
        КонецПопытки;
        Попытка
                МаксКол = Лист.Cells(1,1).SpecialCells(11).Column;
        Исключение
                ПоследняяОшибка = ОписаниеОшибки();
                Возврат 0;
        КонецПопытки;
        
        ТЗ = Новый ТаблицаЗначений;;
        Если Заголовок = 1 Тогда
                Для у = 1 По МаксКол Цикл
                        Попытка
                                ИмяКолонки = Лист.Cells(1,у).Text;
                                ИмяКолонки = СтрЗаменить(ИмяКолонки," ","_");
                                ИмяКолонки = СтрЗаменить(ИмяКолонки,"-","");
                                ИмяКолонки = СтрЗаменить(ИмяКолонки,".","");
                                ИмяКолонки = СтрЗаменить(ИмяКолонки,",","_");
                                ТЗ.НоваяКолонка(ИмяКолонки);
                        Исключение
                                ПоследняяОшибка = ОписаниеОшибки();
                                Возврат 0;
                        КонецПопытки;
                КонецЦикла;
                НачСтрЛиста = 1;
        Иначе
                ТЗ.КоличествоКолонок(МаксКол);
                НачСтрЛиста = 0;
        КонецЕсли;
        
        Для е = 1 По МаксСтр Цикл
                ТЗ.НоваяСтрока();
                Для у = 1 По МаксКол Цикл
                        Попытка
                                Значение = Лист.Cells(е+НачСтрЛиста,у).Value;
                        Исключение
                                ПоследняяОшибка = ОписаниеОшибки();
                                Возврат 0;
                        КонецПопытки;
                        ТЗ.УстановитьЗначение(е,у,Значение);
                КонецЦикла;
        КонецЦикла;
        Возврат ТЗ;
КонецФункции

//загружает данные из указанного диапазона
Функция ЗагрузитьДиапазон(СтрНач, КолНач, СтрКон, КолКон) Экспорт
        ПоследняяОшибка = "Функция в разработке";
        Возврат 0;
КонецФункции

//функция возвращает список значений, содержащий наименования листов книги
Функция ПолучитьСписокЛистов() Экспорт
        Если Загружена = 0 Тогда
                ПоследняяОшибка = "Таблица не загружена";
                Возврат 0;
        КонецЕсли;
        Попытка
                КолЛист =  Эксель.Worksheets.Count;
        Исключение
                ПоследняяОшибка = ОписаниеОшибки();
                Возврат 0;
        КонецПопытки;
        Спис = новый СписокЗначений;
        Для е = 1 По КолЛист Цикл
                Попытка
                        Лист = Эксель.Sheets(е);
                        Спис.ДобавитьЗначение(Лист.Name);
                Исключение
                        ПоследняяОшибка = ОписаниеОшибки();
                        Возврат 0;
                КонецПопытки;
        КонецЦикла;
        Возврат Спис;
КонецФункции
//--------------------------------------------------------------------------------------------------

Функция ВыборФайла(стрФильтр = "", стрЗаголовок = "", стрКаталог = "",  булМножественныйВыбор = Ложь, булПредварительныйПросмотр = ложь, булПроверятьСуществованиеФайла = Ложь) Экспорт
	
	диалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);	
	диалогВыбора.Фильтр = стрФильтр;
	диалогВыбора.Каталог = стрКаталог;
	диалогВыбора.Заголовок = стрЗаголовок;
	диалогВыбора.МножественныйВыбор = булМножественныйВыбор;
	диалогВыбора.ПредварительныйПросмотр = булПредварительныйПросмотр;
	диалогВыбора.ПроверятьСуществованиеФайла = булПроверятьСуществованиеФайла;
	
	Если диалогВыбора.Выбрать() Тогда
		//Значит выбрали
		Если булМножественныйВыбор Тогда
			Возврат диалогВыбора.ВыбранныеФайлы;
		Иначе
			Возврат диалогВыбора.ПолноеИмяФайла;
		КонецЕсли; 
	Иначе
		//Нет выбора
		Возврат Ложь;
	КонецЕсли;
КонецФункции // ВыборФайла()

 Функция ПолучитьДатуИзСтроки(Стр)
    Д = Дата("00010101000000");
    Если ПустаяСтрока(Стр) Тогда
        Возврат Д;
    КонецЕсли;

    Если Найти(Стр,".")>0 Тогда

        Если Найти(Стр,":")>0 И Найти(Стр," ")>0 Тогда
            М = РазложитьСтрокуВМассивПодстрок(Стр," ");
            Возврат ПолучитьДатуИзСтроки(М[0]);
        КонецЕсли;
        М = РазложитьСтрокуВМассивПодстрок(Стр,".");
    ИначеЕсли Найти(Стр,"/")>0 Тогда
        М = РазложитьСтрокуВМассивПодстрок(Стр,"/");
    ИначеЕсли Найти(Стр,",")>0 Тогда
        М = РазложитьСтрокуВМассивПодстрок(Стр,",");
    ИначеЕсли Найти(Стр,"-")>0 Тогда
        М = РазложитьСтрокуВМассивПодстрок(Стр,"-");
    КонецЕсли;

    Попытка
        Если М.Количество()=3 Тогда //"01.02.13" или "01.02.2013"
            Год = ?(СтрДлина(М[2])=2,2000+М[2],М[2]);
            Д = Дата(Год,М[1],М[0]);
        ИначеЕсли М.Количество()=2 Тогда //"02.13" или "02.2013";
            Год = ?(СтрДлина(М[1])=2,2000+М[1],М[1]);
            Д = Дата(Год,М[0],1);
        КонецЕсли;
    Исключение
    КонецПопытки;

    Возврат Д;
КонецФункции

//--------------------------------------------------------------------------------------------------

Процедура ПриОткрытии()
	ПолеВводаОргОснДог = ВосстановитьЗначение("ЗагрузкаГСМ_ПолеВводаОргОснДог");
	ЭлементыФормы.Флажок_Проводить.Значение = ВосстановитьЗначение("ЗагрузкаГСМ_Флажок_Проводить");
КонецПроцедуры


Процедура Кнопка_ВыборФайлаНажатие(Элемент)
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = ЭлементыФормы.Надпись_ИмяФайла.Заголовок;
	Фильтр = "XLS(*.xls)|*.xls";
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	Если ДиалогОткрытияФайла.Выбрать() Тогда		
		ВыбФайл = Новый Файл(ДиалогОткрытияФайла.ПолноеИмяФайла);
        Конструктор();
     	Загрузить(ВыбФайл.ПолноеИмя,0,1);
    	установитьЛист(1); 
		Если (Загружена<>1) Тогда
			Предупреждение("Не удалось открыть указанный файл! Файл может быть занят другим приложением.",,"Ошибка");			
			ЭлементыФормы.Надпись_ИмяФайла.Заголовок = "";
			ЭлементыФормы.Надпись_Инфо.Заголовок = "";
			ЭлементыФормы.Надпись_Период.Заголовок = "";
		Иначе
			ЭлементыФормы.Надпись_ИмяФайла.Заголовок = ВыбФайл.ПолноеИмя;	
			ЭлементыФормы.Надпись_Инфо.Заголовок = "Размер: " +  Окр(ВыбФайл.Размер()/1024, 2)  + " КБайт;	Изменён: " + ВыбФайл.ПолучитьВремяИзменения();
			
		Если (ЭлементыФормы.Флажок_джиписи.Значение = Истина)  Тогда								
			колкаДата=1;
		ИначеЕсли 
			(ЭлементыФормы.Флажок_рн.Значение = Истина)  Тогда								
			колкаДата=5;
		ИначеЕсли 
			(ЭлементыФормы.Флажок_нв.Значение = Истина)  Тогда								
			колкаДата=2;

		Иначе	
			колкаДата=4;
		КонецЕсли;								


			
			
			
			строк=1;			
            НачДата = ТекущаяДата();
			строк=ПоследняяСтрока();
			пустдата= Дата('00010101');
			КонДата = пустдата;
			Записей=0;
			для строк=1 по ПоследняяСтрока() цикл
				содерж=	ПолучитьТекстЯчейки(строк,колкаДата);
				ТекДата=пустдата;
				год = Сред(содерж,0,4);
				мес = Сред(содерж,6,2);
            	чис = Сред(содерж,9,2);
				час = Сред(содерж,12,3);
				час = стрЗАМЕНИТЬ(час,":","");
				час ="0"+СокрЛП(час);
				час =прав(час,2);
				мин=Сред(содерж,15,2);
				сек = "00";
            	СтрокаДата3= год+мес+чис+час+мин+сек;

				попытка
					ТекДата=Дата(СтрокаДата3);
				исключение
					ТекДата=ПолучитьДатуИзСтроки(содерж);
				конецпопытки;
				
				Если (пустдата=ТекДата) Тогда Продолжить; КонецЕсли;
				Если (КонДата<ТекДата) Тогда КонДата=ТекДата; КонецЕсли;
				Если (НачДата>ТекДата) Тогда НачДата=ТекДата; КонецЕсли;
                Записей=Записей+1;

		конецЦикла;
            КонДата= КонДата - 1 + 60 * 60 * 24;
			ЭлементыФормы.Надпись_Период.Заголовок = "Период: " +  НачДата + " - " + КонДата + ";	Число записей: " + Записей;
			ЭлементыФормы.НачПериода.Значение = НачДата;
			ЭлементыФормы.КонПериода.Значение = КонДата;
			НЗ = 1;
			ЭлементыФормы.Индикатор1.Значение = 0;
			ЭлементыФормы.Индикатор1.МаксимальноеЗначение = Записей;		
		КонецЕсли;	
	КонецЕсли;
	Деструктор();

КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	ОчиститьСообщения();
    Конструктор();
  	Загрузить(ЭлементыФормы.Надпись_ИмяФайла.Заголовок,0,1);
   	установитьЛист(1); 
	
		
	Если (ЭлементыФормы.Флажок_джиписи.Значение = Истина)  Тогда								
		колкаДата=1;
		колкаКарта=5;
		колкаКолво=9;
		колкаЦена=11;
		колкаСумма=12;
		колкаТип=8;
		перстрока=1;

		//колкаДата=1;
		//колкаКарта=10;
		//колкаКолво=7;
		//колкаЦена=5;
		//колкаСумма=13;
		//колкаТип=12;
		//перстрока=1;
		
	ИначеЕсли(ЭлементыФормы.Флажок_нв.Значение = Истина)  тогда
		колкаДата=2;
		колкаКарта=4;
		колкаКолво=8;
		колкаЦена=10;
		колкаСумма=11;
		колкаТип=7;
		перстрока=4;
		
	ИначеЕсли(ЭлементыФормы.Флажок_рн.Значение = Истина)  тогда
		колкаДата=5;
		колкаКарта=1;
		колкаКолво=10;
		колкаЦена=11;
		колкаСумма=12;
		колкаТип=7;
		перстрока=6;

	Иначе	
		колкаДата=4;
		колкаКарта=3;
		колкаКолво=12;
		колкаЦена=13;
		колкаСумма=14;
		колкаТип=10;
		перстрока=7;
	КонецЕсли;								

	
	
	Если ЭлементыФормы.Надпись_ИмяФайла.Заголовок = "" Тогда
		Предупреждение("Не выбран файл!",,"Ошибка");
	ИначеЕсли СокрЛП(Строка(ЭлементыФормы.НачПериода.Значение)) = "01.01.0001 0:00:00" Тогда
		Предупреждение("Даты загрузки не заполнены!",,"Ошибка");
	ИначеЕсли ЭлементыФормы.НачПериода.Значение < Дата(НачДата) Тогда
		Предупреждение("Дата начала загрузки меньше минимальной даты в файле!",,"Ошибка");
	ИначеЕсли ЭлементыФормы.КонПериода.Значение > Дата(КонДата) Тогда	
		Предупреждение("Дата конца загрузки больше максимальной даты в файле!",,"Ошибка");
	ИначеЕсли ПолеВводаОргОснДог.Пустая() Тогда	
		Предупреждение("Не выбрана организация основного договора!",,"Ошибка");	
	Иначе		
		СпрГСМ = Справочники.КартаГСМ;
		СпрНом = Справочники.Номенклатура;				
	    номеркарты="000";
		для строк=перстрока по ПоследняяСтрока() цикл
    	    НЗ=строк;
			
	    	СтрокаКарта = СокрП(ПолучитьТекстЯчейки(строк,колкаКарта));	//N2
			
	Если (ЭлементыФормы.Флажок_джиписи.Значение = Истина)  Тогда								
			 номеркарты=СокрЛП(Прав(СтрокаКарта,10)); 
			 //ДатаЗаправкиДБФ = Дата(xB.ПолучитьЗначениеПоля("N1"));
			//сообщить("строка "+строк);
			
			СтрокаДата=	СокрЛП(ПолучитьТекстЯчейки(строк,колкаДата));
			//	год = Сред(СтрокаДата,0,4);
			//	мес = Сред(СтрокаДата,6,2);
           // 	чис = Сред(СтрокаДата,9,2);
			//	час = Сред(СтрокаДата,12,3);
			//	час = стрЗАМЕНИТЬ(час,":","");
			//	час ="0"+СокрЛП(час);
			//	час =прав(час,2);
			//	мин=Сред(СтрокаДата,15,2);
			//	сек = "00";
			год = Сред(СтрокаДата,7,4);
			мес = Сред(СтрокаДата,4,2);
            чис = Сред(СтрокаДата,1,2);
			час = Сред(СтрокаДата,11,3);
			час = стрЗАМЕНИТЬ(час,":","");
			час ="0"+СокрЛП(час);
			час =прав(час,2);
			мин=прав(СтрокаДата,2);
			сек = "00";

			
            СтрокаДата3= год+мес+чис+час+мин+сек;
							Объем = ПолучитьЗначениеЯчейки(строк,колкаКолво);//xB.ПолучитьЗначениеПоля("N6");
							
	ИначеЕсли (ЭлементыФормы.Флажок_рн.Значение = Истина)  Тогда
							
			 номерок=СокрЛП(СтрокаКарта);
			 числецо=0;
			 	попытка
			 		числецо=число(СокрЛП(номерок));
				исключение	
				конецпопытки;
			 Если (числецо>0) Тогда
			 номеркарты=СокрЛП(СтрокаКарта);
			 КонецЕсли;
			 //ДатаЗаправкиДБФ = Дата(xB.ПолучитьЗначениеПоля("N1"));
			//сообщить("строка "+строк);
			
			СтрокаДата=	СокрЛП(ПолучитьТекстЯчейки(строк,колкаДата));
			год = Сред(СтрокаДата,7,4);
			мес = Сред(СтрокаДата,4,2);
            чис = Сред(СтрокаДата,1,2);
			час = Сред(СтрокаДата,11,3);
			час = стрЗАМЕНИТЬ(час,":","");
			час ="0"+СокрЛП(час);
			час =прав(час,2);
			мин=прав(СтрокаДата,2);
			сек = "00";

			
            СтрокаДата3= год+мес+чис+час+мин+сек;
							Объем = - ПолучитьЗначениеЯчейки(строк,колкаКолво);//xB.ПолучитьЗначениеПоля("N6");
						
							
	Иначе	
				Если (Найти(СтрокаКарта,"арта"))Тогда номеркарты=СокрЛП(Прав(СтрокаКарта,10)) КонецЕсли;
			//ДатаЗаправкиДБФ = Дата(xB.ПолучитьЗначениеПоля("N1"));
			//сообщить("строка "+строк);
			
			СтрокаДата=	СокрЛП(ПолучитьТекстЯчейки(строк,колкаДата));
			год = Сред(СтрокаДата,7,4);
			мес = Сред(СтрокаДата,4,2);
            чис = Сред(СтрокаДата,1,2);
			час = Сред(СтрокаДата,11,3);
			час = стрЗАМЕНИТЬ(час,":","");
			час ="0"+СокрЛП(час);
			час =прав(час,2);
			мин=прав(СтрокаДата,2);
			сек = "00";
            СтрокаДата3= год+мес+чис+час+мин+сек;
		
							Объем = - ПолучитьЗначениеЯчейки(строк,колкаКолво);//xB.ПолучитьЗначениеПоля("N6");
	КонецЕсли;								
			
			
			попытка
				ДатаЗаправкиЕкс=Дата(СтрокаДата3);
			исключение
				ДатаЗаправкиЕкс=ПолучитьДатуИзСтроки(СтрокаДата);
			конецпопытки;
			
			Если (ДатаЗаправкиЕкс < ЭлементыФормы.НачПериода.Значение) Или (ДатаЗаправкиЕкс > ЭлементыФормы.КонПериода.Значение) Тогда
				ЭлементыФормы.Индикатор1.Значение = НЗ; 
				//Сообщить("мимо дата/"+ДатаЗаправкиЕкс); 
				Продолжить;
			КонецЕсли;
			
			
			
			НовДок = Документы.УчетГСМ.СоздатьДокумент();			
			НовДок.УстановитьНовыйНомер();
			НовДок.Дата = ТекущаяДата();
			НовДок.ДатаЗаправки = ДатаЗаправкиЕкс;			
			
					
			НайденнаяСсылка = СпрГСМ.НайтиПоКоду(номеркарты);						
			Если (НайденнаяСсылка <> СпрГСМ.ПустаяСсылка()) И (НайденнаяСсылка.ПометкаУдаления = Ложь) Тогда
				НовДок.НомерКарты = НайденнаяСсылка;
				КартаНайдена = Истина;
				//Сообщить("ага");
			Иначе				
				//СтрокаОшибки = "Ссылка на Номер карты '" + СтрокаПоиска + "' не найдена в документе " + НовДок.Номер + " (строка " + НЗ + " в файле).";
				//Если ЭлементыФормы.Флажок_Проводить.Значение = Истина Тогда
				//	СтрокаОшибки = СтрокаОшибки + " Документ проведён не будет!"
				//КонецЕсли;	
				//Сообщить(СтрокаОшибки, СтатусСообщения.Важное); 
				//Если Вопрос(СтрокаОшибки + Символы.ПС + Символы.ПС + "Продолжить загрузку?", РежимДиалогаВопрос.ДаНет, 3600) = КодВозвратаДиалога.Нет Тогда
				//	Сообщить("Операция прервана!", СтатусСообщения.Информация);
				//	Возврат;					
				//КонецЕсли;
				Сообщить("упс карта/"+номеркарты);
				КартаНайдена = Ложь;				
				ЭлементыФормы.Индикатор1.Значение = НЗ;
				Продолжить;
			КонецЕсли;	
			
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
				|	УчетГСМ.Номер,
				|	УчетГСМ.ДатаЗаправки,
				|	УчетГСМ.НомерКарты
				|ИЗ
				|	Документ.УчетГСМ КАК УчетГСМ
				|ГДЕ
				|	УчетГСМ.ДатаЗаправки = &ДатаЗаправки
				|	И УчетГСМ.НомерКарты = &НомерКарты";
			Запрос.УстановитьПараметр("ДатаЗаправки", НовДок.ДатаЗаправки);
			Запрос.УстановитьПараметр("НомерКарты", НовДок.НомерКарты);
			Выгрузка = Запрос.Выполнить().Выгрузить();
			Если Выгрузка.Количество() > 0 Тогда				
				Сообщить("Документ " + Выгрузка[0].Номер + " с датой заправки " + НовДок.ДатаЗаправки + " и номером карты '" + НовДок.НомерКарты + "' уже существует (данные из строки " + НЗ + " в файле).");
				ЭлементыФормы.Индикатор1.Значение = НЗ;
				Продолжить;
			КонецЕсли;
			//
			ГСМНайден = Ложь;
			//СтрокаПоиска = СокрП(xB.ПолучитьЗначениеПоля("N4"));
			СтрокаПоиска=	СокрЛП(ПолучитьТекстЯчейки(строк,колкаТип));
			Если (СтрокаПоиска="Рубли") тогда продолжить; КонецЕсли;

			НайденнаяСсылка = СпрНом.НайтиПоНаименованию(СтрокаПоиска, Истина);			
			Если НайденнаяСсылка <> СпрНом.ПустаяСсылка() Тогда
				НовДок.ВидГСМ = НайденнаяСсылка;
				ГСМНайден = Истина;
			Иначе
				СтрокаОшибки = "Ссылка на Вид ГСМ '" + СтрокаПоиска + "' не найдена в документе " + НовДок.Номер + " (строка " + НЗ + " в файле).";
				Если ЭлементыФормы.Флажок_Проводить.Значение = Истина Тогда
					СтрокаОшибки = СтрокаОшибки + " Документ проведён не будет!"
				КонецЕсли;
				Сообщить(СтрокаОшибки, СтатусСообщения.Важное); 
				Если Вопрос(СтрокаОшибки + Символы.ПС + Символы.ПС + "Продолжить загрузку?", РежимДиалогаВопрос.ДаНет, 3600) = КодВозвратаДиалога.Нет Тогда
					Сообщить("Операция прервана!", СтатусСообщения.Информация);
					Возврат;					
				КонецЕсли;
				ГСМНайден = Ложь;
			КонецЕсли;
			//
			ВодительНайден = Ложь;
			Если КартаНайдена = Истина Тогда				
				Выгрузка = ПолучитьВодителяПоКартеГСМНаДату(НовДок.НомерКарты, НовДок.ДатаЗаправки);
				Если Выгрузка.Количество() > 0 Тогда
					НовДок.Водитель = Выгрузка[0].Водитель;
					Выгрузка = ПолучитьПеревозчикаПоВодителюНаДату(НовДок.Водитель, НовДок.ДатаЗаправки);
					Если Выгрузка.Количество() > 0 Тогда
						Перевозчик = Выгрузка[0].Перевозчик;
						ВодительНайден = Истина;						
						ОснДоговор = Перевозчик.ОсновнойДоговорКонтрагента;						
						Если ОснДоговор.Наименование = "" Тогда						
							СтрокаОшибки = "У перевозчика '" + Перевозчик.Наименование + "' нет основного договора!";
							Сообщить(СтрокаОшибки, СтатусСообщения.Важное);
							Если Вопрос(СтрокаОшибки + Символы.ПС + Символы.ПС + "Продолжить загрузку?", РежимДиалогаВопрос.ДаНет, 3600) = КодВозвратаДиалога.Нет Тогда
								Сообщить("Операция прервана!", СтатусСообщения.Информация);
								Возврат;					
							КонецЕсли;
						Иначе	
							НовДок.ДоговорПеревозчика = ОснДоговор;
						КонецЕсли;
						НовДок.Организация = ОснДоговор.Организация;
						НовДок.Подразделение = Справочники.Подразделения.НайтиПоКоду("00001").Ссылка;
					Иначе
						СтрокаОшибки = "Перевозчик не найден по карте '" + НовДок.НомерКарты + "' на дату " + НовДок.ДатаЗаправки + " в документе " + НовДок.Номер + " (строка " + НЗ + " в файле).";
						Если ЭлементыФормы.Флажок_Проводить.Значение = Истина Тогда
							СтрокаОшибки = СтрокаОшибки + " Документ проведён не будет!"
						КонецЕсли;
						Сообщить(СтрокаОшибки, СтатусСообщения.Важное);	
						Если Вопрос(СтрокаОшибки + Символы.ПС + Символы.ПС + "Продолжить загрузку?", РежимДиалогаВопрос.ДаНет, 3600) = КодВозвратаДиалога.Нет Тогда
							Сообщить("Операция прервана!", СтатусСообщения.Информация);
							Возврат;					
						КонецЕсли;							
					КонецЕсли;	
				Иначе
					СтрокаОшибки = "Водитель не найден по карте '" + НовДок.НомерКарты + "' на дату " + НовДок.ДатаЗаправки + " в документе " + НовДок.Номер + " (строка " + НЗ + " в файле).";
					Если ЭлементыФормы.Флажок_Проводить.Значение = Истина Тогда
						СтрокаОшибки = СтрокаОшибки + " Документ проведён не будет!"
					КонецЕсли;
					Сообщить(СтрокаОшибки, СтатусСообщения.Важное);	
					Если Вопрос(СтрокаОшибки + Символы.ПС + Символы.ПС + "Продолжить загрузку?", РежимДиалогаВопрос.ДаНет, 3600) = КодВозвратаДиалога.Нет Тогда
						Сообщить("Операция прервана!", СтатусСообщения.Информация);
						Возврат;					
					КонецЕсли;
				КонецЕсли;				
			КонецЕсли;	
			//
			Попытка
				НовДок.Объем = Объем;//xB.ПолучитьЗначениеПоля("N6");
			Исключение
				НовДок.Объем =0;
				Предупреждение("Хрен вместо количества");
			КонецПопытки;
			//
			НовДок.Цена = ПолучитьЗначениеЯчейки(строк,колкаЦена);// xB.ПолучитьЗначениеПоля("N7");
		//	НовДок.Сумма = -ПолучитьЗначениеЯчейки(строк,колкаСумма);//- xB.ПолучитьЗначениеПоля("N8");						
			НовДок.Сумма = НовДок.Цена*НовДок.Объем ;//- xB.ПолучитьЗначениеПоля("N8");						

			НовДок.Ответственный=глТекущийПользователь;
						
			Если (ЭлементыФормы.Флажок_Проводить.Значение = Истина) И (ВодительНайден = Истина) И (ГСМНайден = Истина) Тогда								
				РежимЗД = РежимЗаписиДокумента.Проведение;
			Иначе	
				РежимЗД = РежимЗаписиДокумента.Запись;
			КонецЕсли;								
			
			Попытка
				НовДок.Записать(РежимЗД);					
			Исключение
				СтрокаОшибки = "Невозможно записать документ " + НовДок.Номер + " (данные из строки " + НЗ + " в файле).";				
				Сообщить(СтрокаОшибки, СтатусСообщения.ОченьВажное);
				ИнфСтрокаОшибки = "Карта №"+НовДок.НомерКарты.Код+", дата запр.- "+Строка(НовДок.ДатаЗаправки)+", объем- "+Строка(НовДок.Объем)+", цена- "+Строка(НовДок.Цена);
				Сообщить(ИнфСтрокаОшибки, СтатусСообщения.Информация);
				Если Вопрос(СтрокаОшибки + Символы.ПС + Символы.ПС + "Продолжить загрузку?", РежимДиалогаВопрос.ДаНет, 3600) = КодВозвратаДиалога.Нет Тогда
					Сообщить("Операция прервана!", СтатусСообщения.Информация);
					Возврат;					
				КонецЕсли;
			КонецПопытки;			
			
			ЭлементыФормы.Индикатор1.Значение = НЗ;			
			КонецЦикла;		
		НЗ = 1;
		Сообщить("Загрузка завершена.", СтатусСообщения.Информация);
	КонецЕсли;
	Деструктор();

КонецПроцедуры

Процедура ОсновныеДействияФормыОПрограмме(Кнопка)
	Предупреждение("© Роман Мощёнский, Canabis220, 2013", 60, "Разработчик");
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.Редактировать();
	НачПериода = НастройкаПериода.ПолучитьДатуНачала();
	КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
КонецПроцедуры

Процедура ПриЗакрытии()
	СохранитьЗначение("ЗагрузкаГСМ_ПолеВводаОргОснДог", ПолеВводаОргОснДог);
	СохранитьЗначение("ЗагрузкаГСМ_Флажок_Проводить", ЭлементыФормы.Флажок_Проводить.Значение);	
КонецПроцедуры	

Процедура Флажок_рнПриИзменении(Элемент)
	ЭлементыФормы.Флажок_джиписи.Значение = ложь;
	
КонецПроцедуры

Процедура Флажок_нвПриИзменении(Элемент)
	ЭлементыФормы.Флажок_джиписи.Значение = ложь;

КонецПроцедуры

Флажок_нв=Истина;